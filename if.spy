s = {
   :'aadaisydiuaydiuydaydydisuy';
}
ls a = {
  i:i+1
}
fin = {
  i: 
}
fib = {
  y,x : add(y)(x), y;
} -> fib y,x;

fff = {
    if(fff)
    fib _ -> fib fib _;
}

fff fib
if = {
    cond: inner;
    inner = {
      a,b: inner(cond);
      0:a;
      1:b
    };
};
if(cond)(a,b);
if =  {b,c,d}:
{
    (0,c,d): c;
    (1,c,d): d ;
}

eq(a){
  inner(b) = {
    a: 1;
    :;
    i:0;
  };
  a: inner;
}

add <- {
  a, b -> a + b;
  a -> fold a add
}

eq = {
    a: inner;
    b: add(b);
    inner = {
      a: 1;
      : ;
      i: 0;
    }
}
#eq(a)(b)#
#if(eq(a)(b))(a,b)#